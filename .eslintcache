[{"/Users/piska0921/Downloads/expensemanager/src/index.js":"1","/Users/piska0921/Downloads/expensemanager/src/reportWebVitals.js":"2","/Users/piska0921/Downloads/expensemanager/src/App.js":"3","/Users/piska0921/Downloads/expensemanager/src/components/ExpenseList.js":"4","/Users/piska0921/Downloads/expensemanager/src/components/DisplayTab.js":"5","/Users/piska0921/Downloads/expensemanager/src/utility.js":"6","/Users/piska0921/Downloads/expensemanager/src/components/MonthPicker.js":"7","/Users/piska0921/Downloads/expensemanager/src/containers/Home.js":"8","/Users/piska0921/Downloads/expensemanager/src/components/CreateBtn.js":"9","/Users/piska0921/Downloads/expensemanager/src/components/TotalAmount.js":"10","/Users/piska0921/Downloads/expensemanager/src/containers/Create.js":"11"},{"size":562,"mtime":1611822087747,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611818715963,"results":"14","hashOfConfig":"13"},{"size":546,"mtime":1612119508367,"results":"15","hashOfConfig":"13"},{"size":2404,"mtime":1611943476736,"results":"16","hashOfConfig":"13"},{"size":1587,"mtime":1611938710542,"results":"17","hashOfConfig":"13"},{"size":602,"mtime":1611941832187,"results":"18","hashOfConfig":"13"},{"size":3435,"mtime":1612068297272,"results":"19","hashOfConfig":"13"},{"size":3968,"mtime":1611989832124,"results":"20","hashOfConfig":"13"},{"size":640,"mtime":1611943292195,"results":"21","hashOfConfig":"13"},{"size":580,"mtime":1611954539396,"results":"22","hashOfConfig":"13"},{"size":95,"mtime":1612119195445,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1iyqunl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/piska0921/Downloads/expensemanager/src/index.js",[],["51","52"],"/Users/piska0921/Downloads/expensemanager/src/reportWebVitals.js",[],"/Users/piska0921/Downloads/expensemanager/src/App.js",["53","54"],"/Users/piska0921/Downloads/expensemanager/src/components/ExpenseList.js",["55","56"],"import React from 'react'\nimport Ionicon from 'react-ionicons'\nimport PropTypes from 'prop-types'\n\nconst ExpenseList = ({ items, onEditItem, onDeleteItem }) => {\n    return (\n        <ul className=\"list-group list-group-flush\">\n            {\n                items.map((item) => <li \n                className=\"list-group-item d-flex justify-content-between align-items-center\"\n                key={item.id}>\n                    <span className=\"col-1\">\n                        <Ionicon\n                        className=\"rounded-circle\"\n                        fontSize=\"30px\"\n                        style={{ backgroundColor: '#007bff', padding: '5px'}}\n                        color={'#fff'}\n                        icon={item.category.iconName}/>\n                    </span>\n                    <span className=\"col-5\">\n                        {item.title}\n                    </span>  \n                    <span className=\"col-2 font-weight-bold\">\n                        {item.category.type === \"income\" ? \"+\" : \"-\"} ${item.amount}\n                    </span>    \n                    <span className=\"col-2\">\n                        {item.date}\n                    </span> \n                    <a className=\"col-1\" \n                    onClick={() => onEditItem(item)}\n                    href=\"#\">\n                        <Ionicon\n                        className=\"rounded-circle\"\n                        fontSize=\"30px\"\n                        style={{ backgroundColor: '#28a745', padding: '5px'}}\n                        color={'#fff'}\n                        icon=\"ios-create-outline\"/>\n                    </a>    \n                    <a className=\"col-1\" \n                    onClick={() => onDeleteItem(item.id)}\n                    href=\"#\">\n                        <Ionicon\n                        className=\"rounded-circle\"\n                        fontSize=\"30px\"\n                        style={{ backgroundColor: '#dc3545', padding: '5px'}}\n                        color={'#fff'}\n                        icon=\"ios-close\"/>\n                    </a>              \n                </li>)\n            }\n        </ul>\n    )\n}\n\nExpenseList.propTypes = {\n    items: PropTypes.array.isRequired,\n    onEditItem: PropTypes.func.isRequired,\n    onDeleteItem: PropTypes.func.isRequired\n}\n\nExpenseList.defaultProps = {\n    onEditItem: () => {},\n    onDeleteItem: () => {}\n}\nexport default ExpenseList","/Users/piska0921/Downloads/expensemanager/src/components/DisplayTab.js",["57","58","59","60"],"import React from 'react'\nimport Ionicon from 'react-ionicons'\nimport PropTypes from 'prop-types'\nimport { LIST_VIEW, CHART_VIEW } from '../utility'\n\nconst generateTabLinkClass = (currentTab, targetTab) => {\n    return (currentTab === targetTab) ? 'nav-link active' : 'nav-link'\n}\nconst DisplayTab = ({ activeTab, onTabChange }) => {\n    return (\n        <ul className=\"nav nav-tabs nav-fill \">\n            <li className=\"nav-item\">\n                <a \n                className={generateTabLinkClass(activeTab, LIST_VIEW)} \n                href=\"#\"\n                onClick={(event) => { event. preventDefault(); onTabChange(LIST_VIEW)}}>\n                    <Ionicon\n                        className=\"rounded-circle mr-2\"\n                        fontSize=\"25px\"\n                        color={'#007bff'}\n                        icon='ios-paper' />\n                    List\n            </a>\n            </li>\n            <li className=\"nav-item\">\n                <a \n                className={generateTabLinkClass(activeTab, CHART_VIEW)} \n                href=\"#\"\n                onClick={(event) => { event. preventDefault(); onTabChange(CHART_VIEW)}}>\n                <Ionicon\n                        className=\"rounded-circle mr-2\"\n                        fontSize=\"25px\"\n                        color={'#007bff'}\n                        icon='ios-pie' />\n                    Chart\n            </a>\n            </li>\n        </ul>\n    )\n}\n\n\nDisplayTab.propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    onTabChange: PropTypes.func.isRequired\n}\nexport default DisplayTab\n\n","/Users/piska0921/Downloads/expensemanager/src/utility.js",[],"/Users/piska0921/Downloads/expensemanager/src/components/MonthPicker.js",["61","62","63"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { padLeft, generateRangeList } from '../utility'\n\nclass MonthPicker extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isDroppedDown: false,\n            selectedYear: this.props.year,\n            selectedMonth: this.props.month\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick, false)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClick, false)\n    }\n\n    handleClick = (event) => {\n        if (this.node.contains(event.target)) { return }\n        this.setState({\n            isDroppedDown: false\n        })\n    }\n\n    toggleDropDown = (event) => {\n        event.preventDefault()\n        this.setState({\n            isDroppedDown: !this.state.isDroppedDown\n        })\n    }\n\n    selectYear = (event, yearNum) => {\n        event.preventDefault()\n        this.setState({\n            selectedYear: yearNum\n        })\n    }\n\n    selectMonth = (event, monthNum) => {\n        event.preventDefault()\n        this.setState({\n            selectedMonth: monthNum,\n            isDroppedDown: false\n        })\n        this.props.onChangeDate(this.state.selectedYear, monthNum)\n    }\n    render() {\n        const { year, month } = this.props\n        const { isDroppedDown, selectedYear, selectedMonth } = this.state\n        const monthList = generateRangeList(12, 1)\n        const yearList = generateRangeList(9, -4).map(number => number + year)\n        return (\n            <div className=\"dropdown month-picker-component\" ref={(ref) => { this.node = ref }}>\n                <h5>Choose Month</h5>\n                <button className=\"btn btn-lg btn-secondary dropdown-toggle\"\n                    onClick={this.toggleDropDown}>\n                    {`${selectedYear}/ ${padLeft(selectedMonth)}`}\n                </button>\n                { isDroppedDown &&\n                    <div className=\"dropdown-menu\" style={{ display: 'block' }}>\n                        <div className=\"row\">\n                            <div className=\"col border-right year_list\">\n                                {yearList.map((yearNum, idx) =>\n                                    <a key={idx}\n                                        href=\"#\"\n                                        onClick={(event) => this.selectYear(event, yearNum)}\n                                        className={(yearNum === selectedYear) ? \"dropdown-item active\" : \"dropdown-item\"}\n                                    >\n                                        {yearNum}\n                                    </a>)}\n                            </div>\n                            <div className=\"col month_list\">\n                                {monthList.map((monthNum, idx) =>\n                                    <a key={idx}\n                                        onClick={(event) => { this.selectMonth(event, monthNum) }}\n                                        className={(monthNum === selectedMonth) ? \"dropdown-item active\" : \"dropdown-item\"}>\n                                        {padLeft(monthNum)}\n                                    </a>)}\n                            </div>\n                        </div>\n                    </div>}\n            </div>\n        )\n    }\n}\nMonthPicker.propTypes = {\n    year: PropTypes.number.isRequired\n}\nexport default MonthPicker","/Users/piska0921/Downloads/expensemanager/src/containers/Home.js",["64"],"import React from 'react'\nimport ExpenseList from '../components/ExpenseList'\nimport DisplayTab from '../components/DisplayTab'\nimport MonthPicker from '../components/MonthPicker'\nimport CreateBtn from '../components/CreateBtn'\nimport TotalAmount from '../components/TotalAmount'\nimport { LIST_VIEW, CHART_VIEW, TYPE_EXPENSE, TYPE_INCOME, parseToYearAndMonth, padLeft } from '../utility'\n\nexport const categories = {\n    \"1\": {\n        \"id\": \"1\",\n        \"name\": \"travel\",\n        \"type\": \"expense\",\n        \"iconName\": \"ios-plane\"\n    },\n    \"2\": {\n        \"id\": \"2\",\n        \"name\": \"finance\",\n        \"type\": \"expense\",\n        \"iconName\": \"logo-yen\"\n    }\n}\nexport const items = [\n    {\n        \"id\": \"1\",\n        \"title\": \"travel to New Zealand\",\n        \"date\": \"2020-09-11\",\n        \"amount\": 2300,\n        \"categoryId\": \"1\"\n    },\n    {\n        \"id\": \"2\",\n        \"title\": \"Purchase Stock\",\n        \"date\": \"2020-09-11\",\n        \"amount\": 500,\n        \"categoryId\": \"2\"\n    }\n]\n\nconst newItem = {\n    \"id\": \"3\",\n    \"title\": \"travel to Sydney\",\n    \"date\": \"2020-12-12\",\n    \"amount\": 1000,\n    \"categoryId\": \"1\"\n}\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            items,\n            currentDate: parseToYearAndMonth(),\n            displayTab: LIST_VIEW\n        }\n    }\n\n\n    changeDisplay = (display) => {\n        this.setState({\n            displayTab: display\n        })\n    }\n\n    changeDate = (year, month) => {\n        this.setState({\n            currentDate: {\n                year,\n                month\n            }\n        })\n    }\n\n    editItem = (editItem) => {\n        const editedItems = this.state.items.map(item => {\n            if (item.id === editItem.id) {\n                return { ...item, title: 'edited' }\n            }\n            return item\n        })\n        this.setState({\n            items: editedItems\n        })\n    }\n\n    createItem = () => {\n        this.setState({\n            items: [newItem, ...this.state.items]\n        })\n    }\n\n    deleteItem = (targetId) => {\n        const filteredItems = this.state.items.filter(item => item.id !== targetId)\n        this.setState({\n            items: filteredItems\n        })\n    }\n\n    render() {\n        const { items, currentDate, displayTab } = this.state\n        const itemsWithCategory = items.map((item) => {\n            item.category = categories[item.categoryId]\n            return item\n        }).filter( item => {\n            return item.date.includes(`${currentDate.year}-${padLeft(currentDate.month)}`)\n        })\n        let totalIncome = 0, totalExpense = 0\n        itemsWithCategory.forEach((item) => {\n            if (item.category.type === TYPE_EXPENSE) {\n                totalExpense += item.amount\n            } else {\n                totalIncome += item.amount\n            }\n        })\n        return (\n            <>\n                <div className=\"header py-5\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <MonthPicker year={currentDate.year} month={currentDate.month} onChangeDate={this.changeDate} />\n                        </div>\n                        <div className=\"col\">\n                            <TotalAmount totalExpense={totalExpense} totalIncome={totalIncome} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"content-area py-3 px-3\">\n                    <DisplayTab activeTab={displayTab} onTabChange={this.changeDisplay} />\n                    <CreateBtn onCreateClicked={this.createItem} />\n                    {displayTab === LIST_VIEW &&\n                        <ExpenseList items={itemsWithCategory} onEditItem={this.editItem} onDeleteItem={this.deleteItem} />}\n                    {displayTab === CHART_VIEW &&\n                        <h1>CHART</h1>}\n\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Home","/Users/piska0921/Downloads/expensemanager/src/components/CreateBtn.js",[],"/Users/piska0921/Downloads/expensemanager/src/components/TotalAmount.js",[],"/Users/piska0921/Downloads/expensemanager/src/containers/Create.js",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":5,"column":42,"nodeType":"72","messageId":"73","endLine":5,"endColumn":46},{"ruleId":"75","severity":1,"message":"76","line":29,"column":21,"nodeType":"77","endLine":31,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":39,"column":21,"nodeType":"77","endLine":41,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":13,"column":17,"nodeType":"77","endLine":16,"endColumn":89},{"ruleId":"78","severity":1,"message":"79","line":16,"column":39,"nodeType":"80","messageId":"81","endLine":16,"endColumn":60,"fix":"82"},{"ruleId":"75","severity":1,"message":"76","line":26,"column":17,"nodeType":"77","endLine":29,"endColumn":90},{"ruleId":"78","severity":1,"message":"79","line":29,"column":39,"nodeType":"80","messageId":"81","endLine":29,"endColumn":60,"fix":"83"},{"ruleId":"70","severity":1,"message":"84","line":53,"column":23,"nodeType":"72","messageId":"73","endLine":53,"endColumn":28},{"ruleId":"75","severity":1,"message":"76","line":69,"column":37,"nodeType":"77","endLine":73,"endColumn":38},{"ruleId":"75","severity":1,"message":"85","line":79,"column":37,"nodeType":"77","endLine":81,"endColumn":125},{"ruleId":"70","severity":1,"message":"86","line":7,"column":47,"nodeType":"72","messageId":"73","endLine":7,"endColumn":58},{"ruleId":"87","severity":1,"message":"88","line":4,"column":12,"nodeType":"77","endLine":4,"endColumn":16},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property preventDefault.","MemberExpression","unexpectedWhitespace",{"range":"91","text":"92"},{"range":"93","text":"92"},"'month' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TYPE_INCOME' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",[593,595],".",[1109,1111]]